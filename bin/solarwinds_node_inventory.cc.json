{
    "meta": {
        "apiVersion": "1.0.0"
    },
    "tokens": [
        "__settings__.logging.loglevel",
        "__settings__.proxy.proxy_enabled",
        "__settings__.proxy.proxy_url",
        "__settings__.proxy.proxy_port",
        "__settings__.proxy.proxy_type",
        "__settings__.proxy.proxy_username",
        "__settings__.proxy.proxy_rdns",
        "__settings__.proxy.proxy_password",
        "__settings__.additional_parameters.server",
        "__settings__.additional_parameters.port",
        "solarwinds_account.username",
        "solarwinds_account.password"
    ],
    "global_settings": {
        "proxy": {
            "enabled": "{{__settings__.proxy.proxy_enabled}}",
            "host": "{{__settings__.proxy.proxy_url}}",
            "port": "{{__settings__.proxy.proxy_port}}",
            "username": "{{__settings__.proxy.proxy_username}}",
            "password": "{{__settings__.proxy.proxy_password}}",
            "rdns": "{{__settings__.proxy.proxy_rdns}}",
            "type": "{{__settings__.proxy.proxy_type}}"
        },
        "logging": {
            "level": "{{__settings__.logging.loglevel}}"
        }
    },
    "requests": [
        {
            "pre_process": {
                "skip_conditions": [],
                "pipeline": []
            },
            "request": {
                "url": "https://{{__settings__.additional_parameters.server}}:{{__settings__.additional_parameters.port}}/SolarWinds/InformationService/v3/Json/Query?query=SELECT NodeID, ObjectSubType, IPAddress, IPAddressType, DynamicIP, Caption, NodeDescription, Description, DNS, SysName, Vendor, SysObjectID, Location, Contact, VendorIcon, Icon, Status, StatusLED, StatusDescription, CustomStatus, IOSImage, IOSVersion, GroupStatus, StatusIcon, lastBoot, SystemUpTime, ResponseTime, PercentLoss, AvgResponseTime, MinResponseTime, MaxResponseTime, CPULoad, MemoryUsed, MemoryAvailable, PercentMemoryUsed, PercentMemoryAvailable, LastSync, LastSystemUpTimePollUtc, IsServer, Severity, UiSeverity, ChildStatus, Allow64BitCounters, AgentPort, TotalMemory, CMTS, CustomPollerLastStatisticsPollSuccess, SNMPVersion, PollInterval, EngineId, RediscoveryInterval, NextPoll, NextRediscovery, StatCollection, External, Community, RWCommunity, IP, IP_Address, IPAddressGUID, NodeName, BlockUntil,  OrionIdPrefix, OrionIdColumn, SkippedPollingCycles, MinutesSinceLastSync, EntityType, DetailsUrl, DisplayName, Category, IsOrionServer, UnManaged, UnManageFrom, UnManageUntil, Image, StatusIconHint FROM Orion.Nodes",
                "method": "GET",
                "headers": {},
                "auth": {
                    "type": "basic_auth",
                    "options": {
                        "username": "{{solarwinds_account.username}}",
                        "password": "{{solarwinds_account.password}}"
                    }
                }
            },
            "post_process": {
                "skip_conditions": [
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$.results"
                        ],
                        "method": "json_empty"
                    }
                ],
                "pipeline": [
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$.results"
                        ],
                        "method": "json_path",
                        "output": "__stdout__"
                    },
                    {
                        "input": [
                            "{{__stdout__}}",
                            "",
                            "{{index}}",
                            "{{host}}",
                            "{{source}}",
                            "{{sourcetype}}"
                        ],
                        "method": "splunk_xml",
                        "output": "__stdout__"
                    },
                    {
                        "input": [
                            "{{__stdout__}}"
                        ],
                        "method": "std_output"
                    }
                ]
            },
            "iteration_mode": {
                "iteration_count": "1",
                "stop_conditions": [
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$.results"
                        ],
                        "method": "json_empty"
                    }
                ]
            }
        }
    ]
}